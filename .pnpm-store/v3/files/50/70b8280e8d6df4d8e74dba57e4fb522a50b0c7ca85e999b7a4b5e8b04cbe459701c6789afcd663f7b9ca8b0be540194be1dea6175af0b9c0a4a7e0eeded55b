import type { ACClient, SessionManager } from '@kinde-oss/kinde-typescript-sdk';
declare const _default: import("h3").EventHandler<import("h3").EventHandlerRequest, Promise<void>>;
export default _default;
type Slice<T extends Array<unknown>> = T extends [infer _A, ...infer B] ? B : never;
declare module 'h3' {
    interface H3EventContext {
        kinde: {
            [key in keyof ACClient]: (...args: Slice<Parameters<ACClient[key]>>) => ReturnType<ACClient[key]>;
        } & {
            sessionManager: SessionManager;
        };
    }
}
